---
description: 
globs: .cursor/rules/summary.mdc,**/.cursor/rules/summary.mdc
alwaysApply: false
---
# Project Notes
## High-Level Notes
- **Always** consult `.cursor/rules/context.mdc` for cross-project integrations.
- **Never** introduce redundancy between Summary and Plan.

## Project-Specific Notes
- This is a Shiny application written in R.
- The app relies on packages like `shiny`, `meta`, `metafor`, and `ggplot2`.
- The main application file is `app.R`, which sources `ui.R` and `server.R`.
- Core logic is in `R/`.
- **Prefer** implementing comprehensive statistical diagnostics with both visual and formal testing approaches.

# Codebase Overview
This project is a Shiny web application designed for conducting modern meta-analyses. It allows users to upload their data, perform various types of meta-analysis (Random Effects, Fixed Effects, Bivariate), and generate insightful visualizations like forest plots and funnel plots. The application includes comprehensive normality diagnostics, heterogeneity assessment, publication bias analysis, and sensitivity analyses. It supports both binary (2x2) and continuous (Standardized Mean Difference - SMD) data.

## Module Map
- `app.R`: Main application entry point.
- `R/ui.R`: Defines the user interface of the Shiny app with comprehensive diagnostic tabs.
- `R/server.R`: Contains the server-side logic for analyses, visualizations, and diagnostic outputs.
- `R/functions.R`: Provides helper functions including comprehensive normality diagnostics suite.
- `R/bivariate_meta.R`: Contains functions specifically for bivariate meta-analysis.
- `data/`: Contains sample datasets for demonstration.
- `tests/`: Holds unit tests for the application.
- `www/`: Stores static web assets like CSS and images.
- `COMPREHENSIVE_NORMALITY_DIAGNOSTICS.md`: Detailed documentation of normality diagnostic implementation.
- `test_normality_diagnostics.R`: Comprehensive test script for normality diagnostics.

## Key Workflows
1. **Data Upload**: User uploads a dataset (binary or continuous).
2. **Analysis Selection**: User chooses a meta-analysis method.
3. **Analysis Execution**: The server performs statistical calculations using packages like `meta` and `metafor`.
4. **Normality Assessment**: Comprehensive diagnostics assess distributional assumptions across all model types.
5. **Visualization**: Results displayed using `ggplot2` and `plotly` through various plots including Q-Q plots with simulation envelopes.
6. **Report Generation**: A comprehensive report can be generated.

# Recent Important Changes
- 2024-12-XX: **Major Feature**: Consolidated comprehensive normality diagnostics into Model Diagnostics tabs
  - Implemented 12 new diagnostic functions including Q-Q plots with simulation envelopes and Shapiro-Wilk tests
  - Removed separate "Comprehensive Normality Diagnostics" tabs and integrated all functionality into existing "Model Diagnostics" tabs
  - Enhanced explanations with detailed interpretations of what each plot shows and how to understand results
  - Added comprehensive statistical foundations and clinical interpretation guidance
  - Improved UI with structured sections and enhanced CSS styling
- Initial project setup.

Ready to update `.cursor/rules/summary.mdc`?
