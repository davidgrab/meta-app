---
description: 
globs: 
alwaysApply: true
---
**Main Project Rule MDC**
This rule governs how the system manages and evolves three core documents‚Äî`.cursor/rules/summary.mdc`, `.cursor/rules/plan.mdc`, and the read-only `.cursor/rules/context.mdc`‚Äîboth in everyday conversation and when you explicitly invoke the bulk-update command. It also captures any absolute "always"/"never" user directives as part of the summary's Project Notes, separated into High-Level Notes and Project-Specific Notes.

---

## ‚ñ∂Ô∏è Everyday Usage (No Commands Needed)

1. **Context Gathering:** At the start of any discussion, the system will automatically consult:

   * **`.cursor/rules/context.mdc`** (read-only): for cross-project integration context.
   * **`.cursor/rules/summary.mdc`**: for both the Project Notes (High-Level & Project-Specific) and the high-level codebase overview.
2. **Task Management:** As new tasks emerge, the system updates **`.cursor/rules/plan.mdc`** autonomously:

   * Add, complete (`- [x]`), reprioritize, or defer items‚Äîup to 15 open tasks.
   * Enforce the 15-task cap by auto-deferring or completing before adding more.
3. **Summary Updates:**

   * **Trigger:** end of plan cycle or major architecture change.
   * Draft a new `.cursor/rules/summary.mdc` (including Project Notes, code structure, and recent changes).
   * **Approval Gate:** Ask "Ready to update `.cursor/rules/summary.mdc`?" before writing.
4. **Size & Redundancy Controls:**

   * **`.cursor/rules/summary.mdc`:**

     * Overwrite only the latest 5‚Äì10 "Recent Important Changes" each cycle‚Äîdon't accumulate history.
     * Prune overlap between Project Notes and change log.
     * Keep section lengths to 1‚Äì2 screens of Markdown each.
   * **`.cursor/rules/plan.mdc`:**

     * Archive completed sprints as `.cursor/rules/plan-<YYYY-MM-DD>.mdc` once all tasks finish.

---

## üîß Explicit Command

* **`update-project-files`**

  * **Trigger:** Type exactly `update-project-files` (all lowercase).
  * **Action:** Rescan the codebase and existing content, draft fresh versions of both `.cursor/rules/summary.mdc` and `.cursor/rules/plan.mdc`, then:

    1. Prompt for approval on `.cursor/rules/summary.mdc`.
    2. Apply `.cursor/rules/plan.mdc` changes autonomously.

---

## üìë `.cursor/rules/summary.mdc` (Project Notes + Codebase Summary & Structure)

**Purpose:**

1. **Project Notes:** Capture every absolute user directive‚Äî"always do X," "never do Y," preferred languages, critical guidelines‚Äîdivided into two subsections:
   * **High-Level Notes:** Universal rules and best practices that apply across projects.
   * **Project-Specific Notes:** Language or framework preferences and any rules unique to this codebase.

2. **Codebase Overview:** High-level description, module map, key workflows.
3. **Recent Important Changes:** The last 5‚Äì10 truly impactful updates only.

**Structure:**

```markdown
# Project Notes
## High-Level Notes
- **Always** consult `.cursor/rules/context.mdc` for cross-project integrations.
- **Never** introduce redundancy between Summary and Plan.

## Project-Specific Notes
- **Prefer** Project-Specific Notes.

# Codebase Overview
A 1‚Äì2 paragraph summary of the system's purpose.

## Module Map
- `src/auth/` ‚Üí authentication flows
- `src/api/`  ‚Üí external integrations
‚Ä¶

## Key Workflows
1. Request ‚Üí Controller ‚Üí Service ‚Üí Response
2. Batch job ‚Ä¶

# Recent Important Changes
- YYYY-MM-DD: Did X
- YYYY-MM-DD: Added Y
‚Ä¶
```

**Update Process:**

* **Everyday:** Draft when triggered, ask for approval before overwriting.
* **Commanded:** On `update-project-files`, regenerate and ask "Ready to update `.cursor/rules/summary.mdc`?"

---

## üìã `.cursor/rules/plan.mdc` (Active Task Plan)

**Purpose:** Drive the next work cycle with a live to-do list (max 15 open tasks).

**Structure:**

```markdown

## Tasks
- [ ] Task 1 ,  TaskCreationDate: task creation date , TaskDescription: Task description
‚Ä¶

## Next Up
1. Task 3
2. Task 4
```

**Update Process:**

* **Everyday (Autonomous):** Add, complete, reprioritize, or defer tasks on the fly.
* **15-Task Cap:** Automatically defer or complete one before adding a 16th.
* **Archiving:** When all tasks complete or a cycle ends, save as `.cursor/rules/plan-<YYYY-MM-DD>.mdc` and start fresh.

---

## üîç `.cursor/rules/context.mdc` (Cross-Project Context)

**Purpose:** Read-only reference of how this codebase integrates with other projects.

* **Do not modify or overwrite.**
* **Consult** whenever you need broader architectural or integration context.
* Remains static unless manually updated by project leads outside this MDC workflow.

---

By following this **single** "Main Project Rule MDC" the system:

* Runs seamlessly day-to-day without extra commands.
* Uses exactly one explicit trigger‚Äî`update-project-files`‚Äîfor bulk refreshes.
* Incorporates all "always/never" user directives into the Summary's High-Level and Project-Specific Notes.
* Keeps `.cursor/rules/summary.mdc` and `.cursor/rules/plan.mdc` focused, approved where needed, and free of redundant content.
